/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<double> averageOfLevels(TreeNode* root) {
         queue<TreeNode*> Q;
        TreeNode* temp=new TreeNode();
        // Declaring vector
        vector<double> resultVector;
        Q.push(root);
        int count=0;
        double avg;
        while(!Q.empty())
        {
            int count=Q.size();
             double sum=0;
            for(int i=0;i<count;i++)
            {
                temp=Q.front();
                Q.pop();
                if(temp->left!=NULL)
                {
                    Q.push(temp->left);
                }
                if(temp->right!=NULL)
                {
                    Q.push(temp->right);
                }
                sum=sum+temp->val;
            }
            avg=sum/count;
            resultVector.push_back(avg);
        }
        return resultVector;
    }
};